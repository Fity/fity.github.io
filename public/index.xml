<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fity&#39;s Blog</title>
    <link>http://fity.me/</link>
    <description>Recent content on Fity&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Dec 2019 22:51:17 +0800</lastBuildDate>
    
	<atom:link href="http://fity.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://fity.me/about/</link>
      <pubDate>Wed, 25 Dec 2019 22:51:17 +0800</pubDate>
      
      <guid>http://fity.me/about/</guid>
      <description>每一个开发都有一个自己的 Blog 梦，总想着写点什么。
一来显得自己比较厉害，二来要是运气好成了技术圈网红还可以顺势割一波韭菜。
作为一个年更博客，以上两个目的其实都没有意义。
一年一更，一年给域名续一次费。给自己一个写年终总结的地方，也给自己保留一个自己昵称的域名。
以下是其他可以找到我的地方：
 邮箱：imfity@gmail.com Github: @fity Douban: @imfity  </description>
    </item>
    
    <item>
      <title>年度更新2018</title>
      <link>http://fity.me/posts/2018-annually-post/</link>
      <pubDate>Fri, 12 Apr 2019 00:44:00 +0800</pubDate>
      
      <guid>http://fity.me/posts/2018-annually-post/</guid>
      <description>作为一个年更博客的博主，年看着 2019 年已经过去三分之一了， 2018 年的更新终于还是来了。
自从 17 年折腾了一阵之后，18 年从经历来看并没有太多变动。依旧还在那家公司，也依旧在做手忙脚乱的救火队员。总的来说，在技术方面没什么长进，更多的是作为一名专业的软件开发人员的理解更深刻了。
新的一年，即使已经过去三分之一，也还是希望自己的工作，生活都更加顺利。希望队友们都加油。然后，玩得开心！</description>
    </item>
    
    <item>
      <title>年度更新2017</title>
      <link>http://fity.me/posts/2017-annually-post/</link>
      <pubDate>Tue, 28 Nov 2017 00:44:00 +0800</pubDate>
      
      <guid>http://fity.me/posts/2017-annually-post/</guid>
      <description>眼看着 2017 年就要过去了，域名也已经续费了一年，但博客还没更新过。想想还是更新点什么，保持一年至少一更的进度好了。
今年是比较折腾的一年，从工作到生活，能折腾的基本都折腾了一遍。结果怎么样不好说，总之日子勉强还能过就是了。
稍微记录一下今年比较重要的事情：
 换了份工作，新工作认识了一批很有趣的人，也学到了一些新知识。叫嚣了几年要学的前端也终于算入了个门，总算能差不太多的写点小页面了。 卖掉了笔记本，买了台式机。大约两个月前的事情。之所以重要，是因为之前从来没想过卖掉那台笔记本，毕竟是刚毕业那会儿省吃俭用攒出来的。然而租房子住，一套台式机 + 公司笔记本 + 自己笔记本 + 女朋友的各种设备，家里这些东西有点过剩了。而且台式机显卡和内存贵炸了，需要回点血。结果就是咸鱼同城卖掉了。过程还算顺利，希望那台笔记本在它的新主人那继续发光发热了。 买了些提升生活品质的东西。譬如，椅子、电动牙刷什么的。毕竟身体一直挺虚的，有几天脖子突然疼的动弹不得，隐约像是提前进入了中年期。于是开始注意这些小细节了。不奢求自己多强壮，还是想要健康一点。 重新开始记账。用的是复式记账软件 beancount ， 纯文本的账单记录，外加 fava 提供的非常漂亮实用的 web 界面，可以清晰的知道自己有多少钱，自己的钱都在哪里，都花到什么地方去了。到目前为止，正好记了一个月，虽然该花还是照样花，但对于自己的钱去向有了一个清晰的了解后还是感到一丝莫名的心安。  总之，接下来一年继续努力了。</description>
    </item>
    
    <item>
      <title>emacs上手指南</title>
      <link>http://fity.me/posts/try-emacs/</link>
      <pubDate>Sun, 17 Jan 2016 17:38:30 +0800</pubDate>
      
      <guid>http://fity.me/posts/try-emacs/</guid>
      <description>作为一名 emacs 始终学不会用户，其实已经用了差不多一年 VIM 了。最近不知道看到了啥，突然又想尝试一下 emacs 了。于是又找了本教程学习了一下。推荐一下看的书《mastering emacs》，面向纯新手，写的挺有趣的。
然后是正文，上手过程：
 安装 emacs 启动 emacs 输入命令体验一下吧~ 咦？我的 meta 被 manico 覆盖了。退出 manico ？不能忍。C-x C-c 上手结束  </description>
    </item>
    
    <item>
      <title>从zsh迁移到fish了</title>
      <link>http://fity.me/posts/change-from-zsh-to-fish/</link>
      <pubDate>Fri, 20 Mar 2015 23:59:04 +0800</pubDate>
      
      <guid>http://fity.me/posts/change-from-zsh-to-fish/</guid>
      <description>自从知道 fish 之后，就一直很眼红 fish 的补全和高亮功能。 之前也有过一次短暂迁移的经历，配置好了基本的 fish 和 oh-my-fish 环境，然后就放弃了。。。 理由是，fish 不兼容 bash，现有的一些脚本没法用。而且用的 VIM 插件中有依赖 posix shell 的， 换了 fish 导致插件不可用（虽然当晚就找到解决方案并解决了。。。解决方案见文末。。。
记录一下这次迁移中遇到的一些状况好了。
首先，fish 要装 2.x 版（之前装的，怎么装忘了，大概就是 brew install 一下），oh-my-fish 直接上github 仓库复制、粘贴一下就好。 我用的主题是zish，挺好的！
然后就是插件的配置了。 我用到的插件有
brew git balias theme percol python autojump  说明
balias是 alias 的增强版，实现了 alias 命令的自动补全。
theme是浏览和变更主题 用的，方便随时看厌主题了换一个。
percol是查询命令行历史用的（就是其他 shell 都有的ctrl+r功能，原生是不带的。。。然后还要在命令行把percol装上）。
python提供了一些常用的 Python 快捷键（开一个临时 HTTP 服务什么的，暂时还没用上）。
autojump就是在 bash 版的 autojump 上包了一层。
为什么要用 autojump 而不是看起来更加厉害的z，是因为 z 在下列目录结构下的操作方式超出了我智商的上限，无能为力了。
path/hello path/hello/llo  因为两个目录拥有一样的前缀，所以前者权重始终大于后者，这个没有问题。 但是。。。</description>
    </item>
    
    <item>
      <title>Blog Changed Again</title>
      <link>http://fity.me/posts/blog-changed-again/</link>
      <pubDate>Wed, 14 Jan 2015 22:31:27 +0800</pubDate>
      
      <guid>http://fity.me/posts/blog-changed-again/</guid>
      <description>今天突然想看一下自己的博客，结果发现 gitcafe 貌似把我的博客仓库搞坏了。。。先前折腾了半天，把博客源文件和 pelican 生成的 HTML 文件放到一个仓库的不同分支下了。今天上 gitcafe 一看，俩分支内容一样了，连历史都一样，而且没有收到任何异常的邮件，给坑的有点惨。于是干脆把博客搭到 github 上了，大厂毕竟相对可信一点。
根据之前的经验，pelican 其实挺原始的，很多东西做的不算完善，而且本地生成 html 再 push 到仓库的方式个人感觉也不是太好。Jekyll 这种直接推 markdown 文件的方式看起来感觉好多了。至于发布生效的那点时间，实在不是很 care。
总之，以后博客就以这个为主了。</description>
    </item>
    
  </channel>
</rss>